
image: python:3.10
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  MYSQL_DATABASE: terrareg-integration
  MYSQL_ROOT_PASSWORD: password
cache:
  paths:
  - ".cache/pip"
  - venv/
  - terraform-docs

.before_script_python:
  before_script:
  - python --version
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt

.test_image:
  image: terrareg-test-image:v${CI_COMMIT_SHORT_SHA}

unit-integration-selenium-tests:
  stage: test
  extends: .test_image
  script:
  - alembic upgrade head
  - http_proxy= HTTP_PROXY= coverage run -m pytest --verbose ./test
  - coverage report --include='./terrareg/*'
  - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

mysql-integration-selenium-tests:
  stage: test
  extends: .test_image
  services:
  - name: mariadb:10.8
    alias: mysql
  variables:
    INTEGRATION_DATABASE_URL: mysql+mysqlconnector://root:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}
    DATABASE_URL: mysql+mysqlconnector://root:${MYSQL_ROOT_PASSWORD}@mysql/${MYSQL_DATABASE}
  script:
  - alembic upgrade head
  - http_proxy= HTTP_PROXY= coverage run -m pytest --verbose ./test/integration ./test/selenium
  - coverage report --include='./terrareg/*'
  - coverage xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build-wheel:
  stage: build
  extends: .before_script_python
  script:
  - python setup.py bdist_wheel
  - pip install dist/*
  artifacts:
    paths:
    - dist/*.whl

build-test-docker-image:
  stage: build
  image: docker:latest
  services:
  - docker:dind
  script:
  - docker build -f Dockerfile.tests -t terrareg-test-image:v${CI_COMMIT_SHORT_SHA}
    --build-arg http_proxy=$http_proxy --build-arg HTTP_PROXY=$http_proxy --build-arg
    https_proxy=$https_proxy --build-arg HTTPS_PROY=$https_proxy .

release:
  stage: deploy
  image: semantic-release:latest
  cache:
    paths:
    - node_modules/
  variables:
    GITLAB_TOKEN: "$GITLAB_TOKEN"
    GIT_STRATEGY: clone
  script:
  - semantic-release
  only:
  - main

sast:
  stage: test

stages:
- build
- test
- deploy

include:
- template: Security/SAST.gitlab-ci.yml
